\documentclass[9pt]{article}


% Packages
\usepackage[a4paper,left=0.7in,right=0.7in,top=0.9in,bottom=0.6in]{geometry} %set margins
\renewcommand{\rmdefault}{ptm} % Times new roman
\usepackage{wrapfig}           % placing the figure
\usepackage{longtable}         % for the table of resutls
\usepackage[table]{xcolor}     % removes two lines end table...
\usepackage{tcolorbox}         % title boxes
\setlength{\parindent}{0pt}    % remove ident from new paragraphs




%%%%%%%%%%%%%%%%%%%%

\begin{document}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(
concordance=TRUE
)
@




%%%%%%%%%%%%%%%%%%%%


\title{\vspace{-2.5cm}\textbf{MTB Report - From somatic variants to treatment options}}
\author{Department of Medical Statistics, University Medical Center Goettingen, \today}
\date{}
\maketitle

%%%%% DISCLAIMER %%%%%
\vspace{-.5cm}
\fontsize{8}{8}\selectfont
\textbf{Disclaimer:} This report is intended for research use only and should not be used for medical or profesional advice. We make no guarantee of the comprehensiveness, reliability or accuracy of the information on this report. You assume full responsibility for all risks associated with using this report.
\vspace{.5cm}





<<echo=FALSE,results='hide',warning=FALSE,message=FALSE,include=FALSE>>=
##########################
# Functions and packages #
##########################

library(xtable)
library(knitr)
library(pander)
library(ggplot2)   
library(stringr) 
library(timeSeries)

# Colorize functions 
mark_new_variants = function(x){
  cols=c()
  for (i in x){
    if(grepl("NEW.*$",i)){
      r = gsub("NEW"," ",i)
      cols=c(cols,paste("\\textcolor[HTML]{787878}{", formatC(r, dig=2, format="f"), "}",sep=""))
     # cols=c(cols,paste("\\textcolor[HTML]{787878}{\\underline{", formatC(r, dig=2, format="f"), "}}",sep=""))
    }
    if(!grepl("NEW.*$",i)){
      cols=c(cols,i)
    }
  }
  return(cols)
}

## Funciton to colour levels of evidence
col_levels = function(x){
  cols=c()
  for (i in x){

    if(i=="A1"){ 
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{1A237E}{", formatC(i, dig=2, format="f"), "}}"))
    }
    if(i=="A2"){
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{1976D2}{", formatC(i, dig=2, format="f"), "}}"))
    }
    if(i=="A3"){
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{81D4FA}{", formatC(i, dig=2, format="f"), "}}"))
    }
    if(i=="B1"){
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{1B5E20}{", formatC(i, dig=2, format="f"), "}}"))
    }
    if(i=="B2"){
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{4CAF50}{", formatC(i, dig=2, format="f"), "}}"))
    }
    if(i=="B3"){
      cols=c(cols,paste("\\textbf{\\textcolor[HTML]{AED581}{", formatC(i, dig=2, format="f"), "}}"))
    }
  }
 return(cols)
}

## Function to colour positive and negative associations (green and red)
col_association = function(x){
  cols=c()
  for (i in x){
    if(i=="sensitivity"||i=="sensitivity "||i=="response"||i=="response "||i=="increased benefit"){
      cols=c(cols,paste("\\textcolor[HTML]{388E3C}{", formatC(i, dig=2, format="f"), "}"))
    }
    if(i=="resistance"||i=="resistance "||i=="no response"||i==" no response"||i=="resistance or non-response"||i=="no sensitivity"||i=="decreased sensitivity"||i=="reduced sensitivity"){
      cols=c(cols,paste("\\textcolor[HTML]{C62828}{", formatC(i, dig=2, format="f"), "}"))
    }
    if(is.na(i)||i=="n/a"){
      cols=c(cols,paste("\\textcolor[HTML]{388E3C}{", formatC(i, dig=2, format="f"), "}"))
    }
  }
 return(cols)
}


#pat[is.na(pat)]  = "-"
cancer <- strsplit(input$cohort," - ")[[1]][1]
pat <- clinical()
maf <- TCGA()[[1]]
cnv <- TCGA()[[2]]
A   <- Druggable()[[4]]
druggableTARGET <- Druggable()[[1]]


@

\vspace{-0.2cm}

\begin{tcolorbox}[colframe=gray!40!white,width=17cm,height=0.7cm,valign=center]
\textbf{\large{PATIENT INFORMATION}}
\end{tcolorbox}

\begin{table}[h]
\centering
\begin{tabular}{p{1.7in}p{1.5in}p{1in}p{2.5in}}
%\hline
\textbf{Patient ID} & \Sexpr{pat$tcga_participant_barcode}  &  \textbf{Histology} & \Sexpr{pat$histological_type}     \\ 
\textbf{Gender}     & \Sexpr{pat$gender}                    &  \textbf{Stage}     &  \Sexpr{pat$pathologic_stage}     \\ 
\textbf{Age}   	    &  \Sexpr{round(-(as.numeric(pat$days_to_birth)/365.25))} &  \textbf{Num SNVs}  & \Sexpr{nrow(maf)} \\ 
\textbf{Disease}    & \Sexpr{cancer}  	                    &  \textbf{Num CNVs}  & \Sexpr{nrow(cnv)} \\ 
\end{tabular}
\end{table}



\begin{tcolorbox}[colframe=gray!40!white,width=17cm,height=0.7cm,valign=center]
\textbf{\large{GENE-DRUG PREDICTIVE ASSOCIATIONS}}
\end{tcolorbox}


\fontsize{8}{9}\selectfont
%\vspace{0.3cm}
\textbf{Method:} Somatic variants of the patient (mutations, amplifications, deletions, rearrangments) are searched in curated databases of predictive biomarkers  (GKDB\footnote{Dienstmann et al., Cancer Discov (2015), v20.0}, CIViC\footnote{Griffith et al., Nat Genet (2017), 01-May-2018}) and reported according to their clinical evidence (see Levels of Evidence). In the following table, basic information of the somatic variants with relevant clinical implications can be found: \\

\vspace{-0.5cm}

<<label=tab_summary, echo=FALSE, results='asis'>>=
#####################################################
## Generating summary table with  somatic variants ##
#####################################################

if (nrow(A)!=0|| nrow(druggableTARGET)!=0){
tab_summary           <- A[,c("Gene","Pat Var","level")]
tab_summary$level.col <- col_levels(tab_summary$level)
if (nrow(druggableTARGET)>0){
   B            <- druggableTARGET[,c("Gene","Patient_variant")]
   B$Patient_variant <- gsub(pattern = "amplification",replacement = "ampl.", B$Patient_variant)
   B$Patient_variant <- gsub(pattern = "deletion",replacement = "del.",B$Patient_variant)
   B$level      <- "unknown"
   B$level.col  <- "unknown"
   colnames(B)  <- c("Gene","Pat Var","level","level.col")
   B            <- B[!(B$Gene %in% tab_summary$Gene),]
   tab_summary  <- rbind(tab_summary,B)
}
tab_summary$`Pat Var` <- sapply(tab_summary$`Pat Var` , function(x) gsub("NEW", "", x))
tab_summary$`Pat Var` <- sapply(tab_summary$`Pat Var` , function(x) gsub("([A-Z]) ([A-Z])", "\\1, \\2", x))
tab_summary$`Pat Var` <- sapply(tab_summary$`Pat Var` , function(x) gsub(" ", "", x))
tab_summary           <- aggregate(tab_summary[,c("Gene","Pat Var","level.col")],by=list(name=tab_summary$Gene),FUN = function(X) paste(unique(X), collapse=","))[,-1]

## SNVs

if(!is.null(maf)){
  if (nrow(maf)!=0){
    snvs <- tab_summary$Gene %in% maf[,1]
    i <- na.omit(match(tab_summary$Gene,maf[,1]))
    tab_summary_snvs <- cbind(tab_summary[snvs,],maf[i,setdiff(1:ncol(maf),1:3)])
    twice <- grep(",",tab_summary_snvs$`Pat Var`)
    if (length(twice)!=0){
      for (n in 1:length(twice)){
        vars=c()
        vars=strsplit(tab_summary_snvs[twice[n],"Pat Var"],",")[[1]]
        vars=unique(vars)
        if(grepl("ampl\\.|del\\.",paste(vars,collapse=" "))){
    tab_summary_snvs[twice[n],"Pat Var"]=vars[grep("ampl\\.|del\\.",vars,invert=T)]
        }
        else{
    tab_summary_snvs[twice[n],"Pat Var"]=paste(vars,collapse=", ")
        }
      } 
    }
  }


colnames(tab_summary_snvs) <- c("Gene","Patient's Variant","Level of Evidence",colnames(maf)[setdiff(1:ncol(maf),1:3)])
colnames(tab_summary_snvs) <- paste("\\textbf{",colnames(tab_summary_snvs),"}")

 y<-xtable(tab_summary_snvs)
# align(y)<-"p{0.1in}p{0.6in}p{0.8in}p{1.1in}p{0.7in}p{0.6in}p{0.8in}"
    
 #Print table
 print(y,size="\\fontsize{8pt}{10pt}\\selectfont",floating = FALSE,tabular.environment = "longtable",include.rownames =FALSE,sanitize.text.function = function(x){x})

}


 ## CNVs
tab_summary_cnvs <- tab_summary[grep("ampl\\.|del\\.",tab_summary$`Pat Var`),]
#cnvs <- tab_summary_cnv$Gene[grep("ampl\\.|del\\.",tab_summary$`Pat Var`)] %in% cnv[,1]
if (!is.null(tab_summary_cnvs) & nrow(tab_summary_cnvs)!=0 ){
#if (sum(cnvs)!=0){
j <- na.omit(match(tab_summary_cnvs$Gene,cnv[,1]))
tab_summary_cnvs <- cbind(tab_summary_cnvs,cnv[j,setdiff(1:ncol(cnv),1:2)])
#if (!is.null(tab_summary_cnvs$Size)){
# tab_summary_cnvs$Size <- round(as.numeric(tab_summary_cnvs[,"Size"]/1000000),1)
#}
twice <- grep(",",tab_summary_cnvs$`Pat Var`)
#if (length(twice)!=0){
for (t in twice){
  vars=strsplit(tab_summary_cnvs[t,"Pat Var"],", ")[[1]]
  tab_summary_cnvs[t,"Pat Var"]=vars[grep("ampl\\.|del\\.",vars)]
}

colnames(tab_summary_cnvs) <- c("Gene","Patient's Variant","Level of Evidence",colnames(cnv)[setdiff(1:ncol(cnv),1:2)])
colnames(tab_summary_cnvs) <- paste("\\textbf{",colnames(tab_summary_cnvs),"}")

 y<-xtable(tab_summary_cnvs)
# align(y)<-"p{0.1in}p{0.6in}p{0.8in}p{1.1in}p{0.6in}p{0.6in}"
    
 #Print table
 print(y,size="\\fontsize{8pt}{10pt}\\selectfont",floating = FALSE,tabular.environment = "longtable",include.rownames =FALSE,sanitize.text.function = function(x){x})
#}
}

}
@




\textbf{Levels of Evidence:} Findings are classified into 6 levels of evidence combining the \textbf{axis A-B} and the \textbf{axis 1-2-3}. Level A means evidence in the same cancer type. Level B means evidence in any other cancer type. On the 1-2-3 axis, level 1 means evidence supported by drug approval organizations or clinical guidelines, level 2 contains clinical evidence (clinical trials, case reports) and level 3 consists of preclinical evidence.\\


\textbf{Table of Results:} All the predicitve associations are detailed in this table. The results are sorted by 1) drug frequency, 2) levels of evidence (A1-B1-A2-B2-A3-B3). To allow a quick interpretation, the type of association (response, resistance) is colored (green, red) and new variants are gray and underlined. 


<<label=tab1, echo=FALSE, results='asis',warning=FALSE,message=FALSE>>=
#################################
## Generating Table of results ##
#################################
## Levels table

if (nrow(A)!=0){

## Colorize columns
A$level.col    = col_levels(A$level)
A$evidence.col = col_association(A$Predicts)
A$Pvar = mark_new_variants(A$`Pat Var`)


## Reorganize table
A2 = A[,c(1,12,3,4,11,6:8,10)]


## Remove genes when duplicated
c=1
while (c < nrow(A2)){
  if (c==1){gi=A2[c,"Gene"]}
  c=c+1
  if (A2[c,"Gene"]==gi){
    A2[c,1:2]=c("","")
  }
  else{gi=A2[c,"Gene"]}
}


#### Making double header

## First header
colnames(A2)    = c("\\textbf{Patient}"," "," "," ","\\textbf{Gene-Drug}","\\textbf{Associations}"," "," "," ")
## Second header
A2[nrow(A2)+1,] = c("\\textbf{Gene}","\\textbf{Variant}","\\textbf{Disease}","\\textbf{Known Variant}","\\textbf{Association}",
                     "\\textbf{Drugs}","\\textbf{Evidence}","\\textbf{PMID}","\\textbf{Level}")
A2 = A2[c(nrow(A2),1:(nrow(A2)-1)),]

## Create xtable (latex formated table)
x=xtable(A2)

## Format witdh and hlines
align(x)="p{0.1in}p{0.4in}p{0.4in}|p{0.65in}p{0.8in}p{0.7in}p{1.3in}p{0.5in}p{0.65in}p{0.2in}"
hlines = c(-1, 0, 1, nrow(A2))

## Print table
print(x,size="\\fontsize{8pt}{10pt}\\selectfont",floating = FALSE,tabular.environment = "longtable",include.rownames =FALSE,sanitize.text.function = function(x){x},hline.after = hlines, add.to.row=list(pos = list(1), command = "\\hline \\endhead "))
}
@


\textbf{Other genes:} here you can find other genes that might be interesting to check (information from Target DB\footnote{Van Allen et al.,  Nature medicine 20.6 (2014): 682-688, v3} and Meric-Bernstam list\footnote{Meric-Bernstam et al.,  J Natl Cancer Inst. 107(7) (2015)}). No level information is provided in this section. \\




<<label=tab2, echo=FALSE, results='asis'>>=
###############################################################
## Generating table with other genes (TARGET+MERIC-BERNSTAM) ##
###############################################################

## Recover genes not in previous table
druggableTARGET = as.data.frame(lapply(druggableTARGET, as.character),stringsAsFactors = FALSE)

if (nrow(druggableTARGET) !=0){
  new_gene = !(druggableTARGET$Gene %in% A$Gene)
  druggableTARGET = druggableTARGET[new_gene,]
  druggableTARGET = druggableTARGET[,c(1,2,4,3,5)]
  
  if (nrow(druggableTARGET) !=0){
    
    ## Create xtable (latex formated table)
    druggableTARGET$Patient_variant = gsub(pattern = "amplification",replacement = "amp", druggableTARGET$Patient_variant)
    druggableTARGET$Patient_variant = gsub(pattern = "deletion",replacement = "del",druggableTARGET$Patient_variant)
    
    colnames(druggableTARGET)    = c("\\textbf{Patient}"," "," ","\\textbf{Drug-Gene Interactions}"," ")
    
    ## Second header
    druggableTARGET[nrow(druggableTARGET)+1,] = c("\\textbf{Gene}","\\textbf{Variant}","\\textbf{Known Variant}","\\textbf{Description}","\\textbf{Drugs}")
    druggableTARGET = druggableTARGET[c(nrow(druggableTARGET),1:(nrow(druggableTARGET)-1)),]
    
    ## Create xtable (latex formated table)
    ## Format witdh and hlines
    y=xtable(druggableTARGET)
    align(y)="p{0.1in}p{0.4in}p{0.4in}|p{1in}p{3.2in}p{1in}"
    hlines = c(-1, 0, 1, nrow(druggableTARGET))
    
    ## Print table
    print(y,size="\\fontsize{8pt}{10pt}\\selectfont",floating = FALSE,tabular.environment = "longtable",include.rownames =FALSE,sanitize.text.function = function(x){x},hline.after = hlines, add.to.row=list(pos = list(1), command = "\\hline \\endhead "))
  }
}
if (nrow(druggableTARGET)==0){
  print("No other genes found")
}





@



  
  \end{document}

